from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton
from aiogram import types

from utils.config import Config
from keyboards.cms.utils import new_button, back_button, set_full_size_button


async def auto_posting(callback:types.CallbackQuery):
	config = Config()
	builder = InlineKeyboardBuilder()
	
	builder.row(new_button("üîî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–æ–º", "manage_auto_posting"))
	builder.row(new_button("üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—É—Å–∫–æ–≤", "history_runs_auto_posting"))
	builder.row(new_button("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "statistics_auto_posting"))
	builder.row(back_button("main_menu"))
	builder.row(set_full_size_button(builder))
	await callback.message.edit_reply_markup(
		"–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥", 
		reply_markup=builder.as_markup())

async def manage_auto_posting(callback:types.CallbackQuery):
	config = Config()
	builder = InlineKeyboardBuilder()
	
	builder.row(new_button("üü¢ –í–∫–ª—é—á–∏—Ç—å –æ–±—â–∏–π –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥", "manage_auto_posting_group_on"))
	builder.row(new_button("üî¥ –û—Ç–∫–ª—é—á–∏—Ç—å –æ–±—â–∏–π –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥", "manage_auto_posting_group_off"))
	builder.row(new_button("üîç –í—ã–±—Ä–∞—Ç—å –±–æ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å", "manage_auto_posting_select_bot"))
	builder.row(back_button("auto_posting"))
	builder.row(set_full_size_button(builder))
	await callback.message.edit_reply_markup(
		"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–æ–º", 
		reply_markup=builder.as_markup())


async def manage_auto_posting_select_bot(callback:types.CallbackQuery):
	config = Config()
	builder = InlineKeyboardBuilder()
	
	for bot in config.get_list_bots():
		if bot in ["cms", "global"]: continue
		builder.row(new_button(f"ü§ñ {bot}", f"manage_auto_posting_select_bot_{bot}"))

	builder.row(back_button("manage_auto_posting"))
	builder.row(set_full_size_button(builder))
	await callback.message.edit_reply_markup(
		"–í—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞", 
		reply_markup=builder.as_markup())

